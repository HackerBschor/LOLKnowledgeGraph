LOAD CSV WITH HEADERS FROM 'file:///player_small.csv' AS row
MERGE (player:Player {accountID: row.account_id, platformID: row.platform_id})
  ON CREATE SET player.summonerName = row.summoner_name;


LOAD CSV WITH HEADERS FROM 'file:///champions.csv' AS row
MERGE (champion:Champion {championID: row.id, championKey: row.key, championName: row.name, championTitle: row.title})
  ON CREATE SET
    champion.blurb = row.blurb,
    champion.partype = row.partype,
    champion.info_magic = row.info_magic,
    champion.info_attack = row.info_attack,
    champion.info_defense = row.info_defense,
    champion.info_difficulty = row.info_difficulty,
    champion.info_mpregen = row.info_mpregen,
    champion.info_attackdamageperlevel = row.info_attackdamageperlevel,
    champion.info_hpregenperlevel = row.info_hpregenperlevel,
    champion.info_hpperlevel = row.info_hpperlevel,
    champion.info_crit = row.info_crit,
    champion.info_mpperlevel = row.info_mpperlevel,
    champion.info_armorperlevel = row.info_armorperlevel,
    champion.info_movespeed = row.info_movespeed,
    champion.info_critperlevel = row.info_critperlevel,
    champion.info_armor = row.info_armor,
    champion.info_mp = row.info_mp,
    champion.info_attackrange = row.info_attackrange,
    champion.info_spellblockperlevel = row.info_spellblockperlevel,
    champion.info_hpregen = row.info_hpregen,
    champion.info_mpregenperlevel = row.info_mpregenperlevel,
    champion.info_attackspeedperlevel = row.info_attackspeedperlevel,
    champion.info_attackdamage = row.info_attackdamage,
    champion.info_hp = row.info_hp,
    champion.info_spellblock = row.info_spellblock,
    champion.info_attackspeed = row.info_attackspeed;


LOAD CSV WITH HEADERS FROM 'file:///champion_tags.csv' AS row
MATCH (champion:Champion {championID: row.id})
MERGE (tag:Tag {tagID: row.tag})
MERGE (champion)-[op:HAS_TAG]->(tag);


LOAD CSV WITH HEADERS FROM 'file:///matches.csv' AS row
MERGE (match:Match {matchID: row.cmid})
  ON CREATE SET
    match.gameCreation = row.game_creation, match.gameDuration = row.game_duration,
    match.gameID = row.game_id, match.gameMode = row.game_mode, match.gameType = row.game_type,
    match.gameVersion = row.game_version, match.platformID = row.platform_id;

LOAD CSV WITH HEADERS FROM 'file:///teams.csv' AS row
MATCH (match:Match {matchID: row.cmid})
MERGE (queue:Queue {queueID: toInteger(row.cmid) * 10 + toInteger(row.team_id)/100})
MERGE (queue)-[p:PLAYS_IN]->(match)
    ON CREATE SET p.wins = row.win;

# TODO: summoner spells, items, role, lane, position

LOAD CSV WITH HEADERS FROM 'file:///plays_in.csv' AS row
MATCH (player: Player {accountID: row.account_id, platformID: row.platform_id})
MATCH (queue: Queue {queueID: toInteger(row.cmid) * 10 + toInteger(row.team_id)/100})
MATCH (champion: Champion {championKey: row.champion_id})
MATCH (summonerspell1: SummonerSpell {SummonerSpellID: row.spell1_id})
MATCH (summonerspell2: SummonerSpell {SummonerSpellID: row.spell2_id})
MATCH (role: Role {role: row.role})
MATCH (lane: Lane {lane: row.lane})
MATCH (item0: Item {itemID: row.statsItem0})
MATCH (item1: Item {itemID: row.statsItem1})
MATCH (item2: Item {itemID: row.statsItem2})
MATCH (item3: Item {itemID: row.statsItem3})
MATCH (item4: Item {itemID: row.statsItem4})
MATCH (item5: Item {itemID: row.statsItem5})
MATCH (item6: Item {itemID: row.statsItem6})
MERGE (player)-[pi:PLAYS_IN]->(queue)
MERGE (pi)-[pc:PLAYS_CHAMP]->(champion)
MERGE (pi)-[ps1:PLAYS_SUMMONERSPELL]->(summonerspell1)
MERGE (pi)-[ps2:PLAYS_SUMMONERSPELL]->(summonerspell2)
MERGE (pi)-[pr:PLAYS_ROLE]->(role)
MERGE (pi)-[pl:PLAYS_LANE]->(lane)
MERGE (pi)-[pi0:PLAYS_Item]->(item0)
MERGE (pi)-[pi1:PLAYS_Item]->(item1)
MERGE (pi)-[pi2:PLAYS_Item]->(item2)
MERGE (pi)-[pi3:PLAYS_Item]->(item3)
MERGE (pi)-[pi4:PLAYS_Item]->(item4
MERGE (pi)-[pi5:PLAYS_Item]->(item5)
MERGE (pi)-[pi6:PLAYS_Item]->(item6)

    ON CREATE SET
        pi.participantID = row.participant_id,
        ps1.sumNo = 1, ps2.sumNo = 1,
        pi0.itemNo=0,pi1.itemNo=1,pi2.itemNo=2,pi3.itemNo=3,pi4.itemNo=4,pi5.itemNo=5,pi6.itemNo=6,
        pi.assists = row.statsAssists,
        pi.champLevel = row.statsChamplevel,
        pi.combatPlayerScore = row.statsCombatplayerscore,
        pi.damageDealtToObjectives = row.statsDamagedealttoobjectives,
        pi.damageDealtToTurrets = row.statsDamagedealttoturrets,
        pi.damageSelfMitigated = row.statsDamageselfmitigated,
        pi.deaths = row.statsDeaths,
        pi.doubleKills = row.statsDoublekills,
        pi.firstBloodAssist = row.statsFirstbloodassist,
        pi.firstBloodKill = row.statsFirstbloodkill,
        pi.firstInhibitorAssist = row.statsFirstinhibitorassist,
        pi.firstInhibitorKill = row.statsFirstinhibitorkill,
        pi.firstTowerAssist = row.statsFirsttowerassist,
        pi.firstTowerKill = row.statsFirsttowerkill,
        pi.goldEarned = row.statsGoldearned,
        pi.goldSpent = row.statsGoldspent,
        pi.inhibitorKills = row.statsInhibitorkills,

        pi.killingSprees = row.statsKillingsprees,
        pi.kills = row.statsKills,
        pi.largestCriticalStrike = row.statsLargestcriticalstrike,
        pi.largestKillingSpree = row.statsLargestkillingspree,
        pi.largestMultiKill = row.statsLargestmultikill,
        pi.longestTimeSpentLiving = row.statsLongesttimespentliving,
        pi.magicDamageDealt = row.statsMagicdamagedealt,
        pi.magicDamageDealtToChampions = row.statsMagicdamagedealttochampions,
        pi.magicalDamageTaken = row.statsMagicaldamagetaken,
        pi.neutralMinionsKilled = row.statsNeutralminionskilled,
        pi.neutralMinionsKilledEnemyJungle = row.statsNeutralminionskilledenemyjungle,
        pi.neutralMinionsKilledTeamJungle = row.statsNeutralminionskilledteamjungle,
        pi.objectivePlayerScore = row.statsObjectiveplayerscore,
        pi.participantId = row.statsParticipantid,
        pi.pentaKills = row.statsPentakills,
        pi.perk0 = row.statsPerk0,
        pi.perk0Var1 = row.statsPerk0var1,
        pi.perk0Var2 = row.statsPerk0var2,
        pi.perk0Var3 = row.statsPerk0var3,
        pi.perk1 = row.statsPerk1,
        pi.perk1Var1 = row.statsPerk1var1,
        pi.perk1Var2 = row.statsPerk1var2,
        pi.perk1Var3 = row.statsPerk1var3,
        pi.perk2 = row.statsPerk2,
        pi.perk2Var1 = row.statsPerk2var1,
        pi.perk2Var2 = row.statsPerk2var2,
        pi.perk2Var3 = row.statsPerk2var3,
        pi.perk3 = row.statsPerk3,
        pi.perk3Var1 = row.statsPerk3var1,
        pi.perk3Var2 = row.statsPerk3var2,
        pi.perk3Var3 = row.statsPerk3var3,
        pi.perk4 = row.statsPerk4,
        pi.perk4Var1 = row.statsPerk4var1,
        pi.perk4Var2 = row.statsPerk4var2,
        pi.perk4Var3 = row.statsPerk4var3,
        pi.perk5 = row.statsPerk5,
        pi.perk5Var1 = row.statsPerk5var1,
        pi.perk5Var2 = row.statsPerk5var2,
        pi.perk5Var3 = row.statsPerk5var3,
        pi.perkPrimaryStyle = row.statsPerkprimarystyle,
        pi.perkSubStyle = row.statsPerksubstyle,
        pi.physicalDamageDealt = row.statsPhysicaldamagedealt,
        pi.physicalDamageDealtToChampions = row.statsPhysicaldamagedealttochampions,
        pi.physicalDamageTaken = row.statsPhysicaldamagetaken,
        pi.playerScore0 = row.statsPlayerscore0,
        pi.playerScore1 = row.statsPlayerscore1,
        pi.playerScore2 = row.statsPlayerscore2,
        pi.playerScore3 = row.statsPlayerscore3,
        pi.playerScore4 = row.statsPlayerscore4,
        pi.playerScore5 = row.statsPlayerscore5,
        pi.playerScore6 = row.statsPlayerscore6,
        pi.playerScore7 = row.statsPlayerscore7,
        pi.playerScore8 = row.statsPlayerscore8,
        pi.playerScore9 = row.statsPlayerscore9,
        pi.quadraKills = row.statsQuadrakills,
        pi.sightWardsBoughtInGame = row.statsSightwardsboughtingame,
        pi.statPerk0 = row.statsStatperk0,
        pi.statPerk1 = row.statsStatperk1,
        pi.statPerk2 = row.statsStatperk2,
        pi.timeCCingOthers = row.statsTimeccingothers,
        pi.totalDamageDealt = row.statsTotaldamagedealt,
        pi.totalDamageDealtToChampions = row.statsTotaldamagedealttochampions,
        pi.totalDamageTaken = row.statsTotaldamagetaken,
        pi.totalHeal = row.statsTotalheal,
        pi.totalMinionsKilled = row.statsTotalminionskilled,
        pi.totalPlayerScore = row.statsTotalplayerscore,
        pi.totalScoreRank = row.statsTotalscorerank,
        pi.totalTimeCrowdControlDealt = row.statsTotaltimecrowdcontroldealt,
        pi.totalUnitsHealed = row.statsTotalunitshealed,
        pi.tripleKills = row.statsTriplekills,
        pi.trueDamageDealt = row.statsTruedamagedealt,
        pi.trueDamageDealtToChampions = row.statsTruedamagedealttochampions,
        pi.trueDamageTaken = row.statsTruedamagetaken,
        pi.turretKills = row.statsTurretkills,
        pi.unrealKills = row.statsUnrealkills,
        pi.visionScore = row.statsVisionscore,
        pi.visionWardsBoughtInGame = row.statsVisionwardsboughtingame,
        pi.wardsKilled = row.statsWardskilled,
        pi.wardsPlaced = row.statsWardsplaced,
        pi.win = row.statsWin

